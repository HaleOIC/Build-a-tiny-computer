// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux4Way.hdl

/**
 * 4-way demultiplexor:
 * {a, b, c, d} = {in, 0, 0, 0} if sel == 00
 *                {0, in, 0, 0} if sel == 01
 *                {0, 0, in, 0} if sel == 10
 *                {0, 0, 0, in} if sel == 11
 */

CHIP DMux4Way {
    IN in, sel[2];
    OUT a, b, c, d;

    PARTS:
    // Put your code here:

    Xor ( a = sel[0], b = sel[1], out = xXory );
    And ( a = sel[0], b = sel[1], out = xAndy );
    Not ( in = xAndy, out = NotxAndy );
    Not ( in = xXory, out = NotxXory );

    // ans[0] = ~(x^y)&~(x&y)
    And ( a = NotxXory, b = NotxAndy, out = ans0 );

    // ans[1] = (x^y)&y
    And ( a = xXory, b = sel[0], out = ans1 );

    // ans[2] = (x^y)&x
    And ( a = xXory, b = sel[1], out = ans2 );

    // ans[3] = ~(x^y)&(x&y);
    And ( a = NotxXory, b = xAndy, out = ans3 );


    // output the value
    Mux ( a = false,  b = in, sel = ans0, out = a );
    Mux ( a = false,  b = in, sel = ans1, out = b );
    Mux ( a = false,  b = in, sel = ans2, out = c );
    Mux ( a = false,  b = in, sel = ans3, out = d );

}